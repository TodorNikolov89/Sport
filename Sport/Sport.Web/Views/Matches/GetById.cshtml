@model LiveResultViewModel

@using System.Web.Mvc.Ajax
@using System.Web.Mvc
@using Microsoft.AspNet.Identity


@{
    ViewData["Title"] = "Details";
}


<script>
    var arr = ["0", "15", "30", "40", "Ad"];
</script>

<link rel="stylesheet" type="text/css" href="~/css/Score.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>


<form asp-controller="Matches" asp-action="ChangeResult"
      data-ajax-method="POST"
      data-ajax="true">
</form>

<table class="table table-bordered table-hover">
    <thead>
        <tr>
            <th>
                Player Name
            </th>
            <th>
                Sets
            </th>
            <th>
                Games
            </th>
            <th>
                Points
            </th>
            <th>
                Tie Break Points
            </th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <th id="firstPlayerName">
                @Model.FirstPlayer.FirstName @Model.FirstPlayer.LastName
            </th>
            <th id="setsFirstPlayer">
                @Model.FirstPlayerSets
            </th>

            <th id="gamesFirstPlayer">
                @{
                    int firstPlayerSetNumber = 1;
                }
                @foreach (var set in Model.Sets)
                {
                    <span class="games-set" id="firstPlayerGamesInSet-@firstPlayerSetNumber">
                        @set.FirstPlayerGames
                    </span>
                    {
                        firstPlayerSetNumber = firstPlayerSetNumber + 1;
                    }
                }
            </th>
            <th id="pointsFirstPlayer">
                @Model.FirstPlayerPoints
            </th>
            <th id="tieBreakPointsFirstPlayer" class="tieBreak">

            </th>

        </tr>
        <tr>
            <th>
                @Model.SecondPlayer.FirstName @Model.SecondPlayer.LastName
            </th>
            <th id="setsSecondPlayer">
                @Model.SecondPlayerSets
            </th>
            <th id="gamesSecondPlayer">
                @{
                    int secontPlayerSetNumber = 1;
                }
                @foreach (var set in Model.Sets)
                {
                    <span class="games-set" id="secondPlayerGamesInSet-@secontPlayerSetNumber">
                        @set.SecondPlayerGames
                    </span>
                    {
                        secontPlayerSetNumber = secontPlayerSetNumber + 1;
                    }
                }
            </th>
            <th id="pointsSecondPlayer">
                @Model.SecondPlayerPoints
            </th>
            <th id="tieBreakPointsSecondPlayer" class="tieBreak">

            </th>
        </tr>
    </tbody>
</table>

<section class="sectionScore">
    <span id="spanPointsFirstPlayer" class="span" align="center">
        @Model.FirstPlayerPoints
    </span>

    <span class="span"> / </span>

    <span id="spanPointsSecondPlayer" class="span">
        @Model.SecondPlayerPoints
    </span>
</section>

<section class="section">
    <button class="button" id="firstButtonId">Add First Player Point</button>
    <button class="button" id="secondButtonId">Add Second Player Point</button>
</section>

<script type="text/javascript" defer>

    $(document).ready(function () {
        var model = {
            firstPlayerPoints: @Model.FirstPlayerPoints,
            secondPlayerPoints: @Model.SecondPlayerPoints,
            tieBreakPointsFirstPlayer: @Model.FirstPlayerTieBreakPoints,
            tieBreakPointsSecondPlayer: @Model.SecondPlayerTieBreakPoints,
        };
        onChangeResultSuccess(model)
    });

    $("#firstButtonId").click(function (e) {
       e.preventDefault();
        $.ajax({
            type: "POST",
            url: '@Html.Raw(Url.Action("ChangeResult", "Matches"))',
            data: {
                buttonId: this.id,
                matchId: @Model.Id,

            },
            dataType: "json",
            success: function (data) {
                onChangeResultSuccess(data)
            },
            error: function (data) {
                console.log(data),
                alert("error")
            }
        });
    });

     $("#secondButtonId").click(function (e) {
       e.preventDefault();
        $.ajax({
            type: "POST",
            url: '@Html.Raw(Url.Action("ChangeResult", "Matches"))',
            data: {
                        buttonId: this.id,
                        matchId : @Model.Id,
            },
            dataType: "json",
            success: function (data) {
                onChangeResultSuccess(data)

                console.log(data)
            },
            error: function (data) {
                console.log(data),
                alert("error")
            }
        });
     });

    function addNewSetElement(id, playerElement, setNumber) {
        var newSpan = document.createElement("SPAN");
        newSpan.setAttribute('class', 'games-set');
        newSpan.setAttribute('id', id + setNumber);

        playerElement.appendChild(newSpan);
    }

    function updateLastSetResult(data, loadedSetsCount) {
        var firstPlayerPrevSet = document.getElementById('firstPlayerGamesInSet-' + loadedSetsCount);
        var secondPlayerPrevSet = document.getElementById('secondPlayerGamesInSet-' + loadedSetsCount);

        firstPlayerPrevSet.innerHTML = data.sets[loadedSetsCount - 1].firstPlayerGames;
        secondPlayerPrevSet.innerHTML = data.sets[loadedSetsCount - 1].secondPlayerGames;
    }

    function onChangeResultSuccess(data) {
        if (data.sets) {
            var firstPlayerElement = document.getElementById('gamesFirstPlayer');
            var loadedSetsCount = firstPlayerElement.childElementCount;

            if (loadedSetsCount !== data.sets.length) {
                addNewSetElement('firstPlayerGamesInSet-', firstPlayerElement, data.sets.length)

                var secondPlayerElement = document.getElementById('gamesSecondPlayer');
                addNewSetElement('secondPlayerGamesInSet-', secondPlayerElement, data.sets.length)

                updateLastSetResult(data, loadedSetsCount);
            }

            var firstPlayerSets = 'firstPlayerGamesInSet-' + data.sets.length;
            var secondPlayerSets = 'secondPlayerGamesInSet-' + data.sets.length;

            $("#" + firstPlayerSets).html(data.firstPlayerGames);
            $("#" + secondPlayerSets).html(data.secondPlayerGames);
        }

        $("#pointsFirstPlayer").html(arr[data.firstPlayerPoints]),
        $("#pointsSecondPlayer").html(arr[data.secondPlayerPoints]),
        $("#setsFirstPlayer").html(data.firstPlayerSets),
        $("#setsSecondPlayer").html(data.secondPlayerSets),
        $("#tieBreakPointsFirstPlayer").html(data.firstPlayerTieBreakPoints),
        $("#tieBreakPointsSecondPlayer").html(data.secondPlayerTieBreakPoints),
        $("#spanPointsFirstPlayer").html(arr[data.firstPlayerPoints]),
        $("#spanPointsSecondPlayer").html(arr[data.secondPlayerPoints])
    }
</script>

