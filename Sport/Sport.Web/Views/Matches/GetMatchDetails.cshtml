@model Match
@using System

@{
    ViewData["Title"] = "Match Details";
    Layout = "";
}

<h1 align="center">@ViewData["Title"]</h1>
<script>
    var arr = ["0", "15", "30", "40", "Ad"];
</script>

<div class="container">
    <h2>Dynamic Tabs</h2>

    <ul class="nav nav-tabs" >
        @for (int i = 1; i <= Model.Sets.ToList().Count(); i++)
        {
            <li style="align-content:center"><a id="set-@i" data-toggle="tab" onclick="getInfo(@i)">Set @i</a></li>
        }       
    </ul>
    <div id="setContent"></div>
</div>

<script>
    function getInfo(id) {
        debugger;
       // var div = document.getElementById("#setContent");
        let setNumber = id - 1;
        var sets = JSON.parse('@Html.Raw(Json.Serialize(Model.Sets))');
        var set = sets[setNumber];
        var div = document.getElementById("setContent");
        div.innerHTML = "";
        console.log(set);
        for (var i = 0; i < set.games.length; i++) {
            //debugger;
            var gamePara = document.createElement('p')
            gamePara.innerHTML = "Game " + (i + 1);
            div.append(gamePara);

            var gamePoints = set.games[i].points;
            var points = gamePoints.map(x => arr[x.firstPlayerPoints] + " - " + arr[x.secondPlayerPoints]);
            div.append(points.join(", "));
        }
        debugger;
        if (set.hasTieBreak) {
            var tieBreakPara= document.createElement('p')
            tieBreakPara.innerHTML = "Tiebreak";
            div.append(tieBreakPara);
            debugger;
            var tieBreak = set.tieBreak;
            var tieBreakPoints = tieBreak.tieBreakPoints;
            var tbPoints = tieBreakPoints.map(x => x.firstPlayerPoint + " - " + x.secondPlayerPoint);
            var result = tbPoints.join("\r\n")
            div.append(result)
            debugger;
        }

    }
</script>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>


@*<div class="container">
        <h2>Dynamic Tabs</h2>
        <p>To make the tabs toggleable, add the data-toggle="tab" attribute to each link. Then add a .tab-pane class with a unique ID for every tab and wrap them inside a div element with class .tab-content.</p>

        <ul class="nav nav-tabs">
            @for (int i = 1; i <= Model.Sets.ToList().Count(); i++)
            {
            <li><a id="#set-@i" data-toggle="tab" onclick="getInfo(this.id)">Set @i</a></li>
            }
        </ul>
        <div class="tab-content">
            <div id="set-1" class="tab-pane fade">
                <h3>Set number </h3>
                <p>Info</p>
            </div>
        </div>
    </div>*@
